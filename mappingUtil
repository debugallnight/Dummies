
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.Arrays;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;


import lombok.SneakyThrows;

@RunWith(SpringRunner.class)
@ContextConfiguration(classes = { DozerTestBean.class, MappingUtil.class, MockSource.class })
public class MappingUtilTest {

    @Autowired
    private MappingUtil mappingUtil;

    @Autowired
    private MockSource source;

    @Test
    @SneakyThrows
    public void testMapMethod() {

        source.setId("ID_1");
        source.setName("NAME_1");
        source.setCount(1);

        MockTarget target = mappingUtil.map(source, MockTarget.class);
        assertNotNull(target);
        assertEquals(source.getId(), target.getId());
        assertEquals(source.getName(), target.getName());
        assertEquals(source.getCount(), target.getCount());

    }

    @Test
    @SneakyThrows
    public void testMapMethodUsingMapId() {

        MockSource source = new MockSource();
        source.setId("ID_1");
        source.setName("NAME_1");
        source.setCount(1);

        MockTarget target = mappingUtil.map(source, MockTarget.class, "mockMapId");

        assertNotNull(target);
        assertEquals(source.getId(), target.getId());
        assertEquals(source.getName(), target.getName());
        assertEquals(source.getCount(), target.getCount());

    }

    @Test
    @SneakyThrows
    public void testMapListMethod() {

        MockSource source1 = new MockSource();
        source1.setId("ID_1");
        source1.setName("NAME_1");
        source1.setCount(1);

        MockSource source2 = new MockSource();
        source2.setId("ID_1");
        source2.setName("NAME_1");
        source2.setCount(1);

        List<MockSource> sourceList = Arrays.asList(source1, source2);

        List<MockTarget> targetList = mappingUtil.mapList(sourceList, MockTarget.class,
                "mockMapId");

        assertNotNull(targetList);
        assertEquals(targetList.get(0).getId(), sourceList.get(0).getId());
        assertEquals(targetList.get(0).getName(), sourceList.get(0).getName());
        assertEquals(targetList.get(0).getCount(), sourceList.get(0).getCount());

        assertEquals(targetList.get(1).getId(), sourceList.get(1).getId());
        assertEquals(targetList.get(1).getName(), sourceList.get(1).getName());
        assertEquals(targetList.get(1).getCount(), sourceList.get(1).getCount());

    }

}
